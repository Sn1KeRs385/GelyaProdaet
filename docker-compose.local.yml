version: '3'

services:

  api:
    container_name: "${COMPOSE_PROJECT_NAME}_api"
    build:
      context: ./config/api
    working_dir: /var/www
    volumes:
      - ${PATH_TO_API}:/var/www/
    environment:
      TZ: UTC

  nginx:
    container_name: "${COMPOSE_PROJECT_NAME}_nginx"
    image: nginx:alpine
    ports:
      - ${HOST_PORT_NGINX}:80
    volumes:
      - ${PATH_TO_API}:/var/www/api
      - ./.docker/nginx/log:/var/log/nginx
      - ./config/nginx/api.conf:/etc/nginx/conf.d/default.conf
    environment:
      TZ: UTC
    depends_on:
      - api

  postgres:
    container_name: "${COMPOSE_PROJECT_NAME}_postgresdb"
    image: postgres:15.2
    restart: always
    ports:
      - "${HOST_PORT_POSTGRES}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.docker/postgresql-data:/var/lib/postgresql/data

  redis:
    container_name: "${COMPOSE_PROJECT_NAME}_redisdb"
    image: redis:7.0.9
    restart: always
    ports:
      - "${HOST_PORT_REDIS}:6379"
    volumes:
      - ./.docker/redis-data:/data

  minio:
    container_name: "${COMPOSE_PROJECT_NAME}_minio"
    image: minio/minio
    ports:
      - "${MINIO_9000_CONTAINER_PORT}:9000"
      - "${MINIO_9001_CONTAINER_PORT}:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data

volumes:
  minio_storage:
